{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\certa\\\\front\\\\certa\\\\src\\\\Login\\\\GoogleAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { auth } from '../Firebase/FirebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoogleAuth() {\n  _s();\n  const [usuario, setUsuario] = useState(null); // Inicialize como `null`\n  const [questionarioCompleto, setQuestionarioCompleto] = useState(false);\n\n  // Função de Login\n  const Login = async () => {\n    try {\n      // Verifica se o usuário está logado no Firebase\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const idToken = await currentUser.getIdToken(true); // Obtém o token do usuário\n        const response = await axios.post('http://localhost:8080/login', {\n          idToken\n        });\n        const userInfo = response.data; // Obtém as informações do usuário do back-end\n        console.log('Informações do usuário:', userInfo);\n        setUsuario(userInfo); // Armazena as informações do usuário\n        setQuestionarioCompleto(userInfo.questionarioCompleto); // Atualiza o estado sobre o questionário\n      } else {\n        console.error('Usuário não está logado');\n      }\n    } catch (error) {\n      console.error('Erro ao fazer login:', error);\n    }\n  };\n\n  // Função de Logout\n  const logout = async () => {\n    try {\n      await axios.post('http://localhost:8080/logout'); // Envia requisição de logout ao back-end\n      setUsuario(null); // Limpa as informações do usuário\n      setQuestionarioCompleto(false); // Reseta o estado do questionário\n      await auth.signOut(); // Realiza o logout no Firebase\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    }\n  };\n\n  // Função para completar o questionário\n  const preencherQuestionario = async () => {\n    if (usuario) {\n      try {\n        await axios.post('http://localhost:8080/completar-questionario', {\n          uid: usuario.uid\n        });\n        setQuestionarioCompleto(true); // Marca o questionário como completo no front-end\n      } catch (error) {\n        console.error('Erro ao marcar questionário como completo:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Informa\\xE7\\xF5es do Usu\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), usuario ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bem-vindo, \", usuario.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), usuario.photoURL && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: usuario.photoURL,\n        alt: \"Foto do usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", usuario.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"UID: \", usuario.uid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), questionarioCompleto ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Question\\xE1rio completo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: preencherQuestionario,\n        children: \"Completar Question\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Login,\n      children: \"Login com Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleAuth, \"kKyTZeERh2MYAQa4dnLQP230zws=\");\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["React","useState","axios","auth","jsxDEV","_jsxDEV","GoogleAuth","_s","usuario","setUsuario","questionarioCompleto","setQuestionarioCompleto","Login","currentUser","idToken","getIdToken","response","post","userInfo","data","console","log","error","logout","signOut","preencherQuestionario","uid","children","fileName","_jsxFileName","lineNumber","columnNumber","displayName","photoURL","src","alt","email","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nicol/OneDrive/Área de Trabalho/certa/front/certa/src/Login/GoogleAuth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { auth } from '../Firebase/FirebaseConfig';\r\n\r\nfunction GoogleAuth() {\r\n  const [usuario, setUsuario] = useState(null); // Inicialize como `null`\r\n  const [questionarioCompleto, setQuestionarioCompleto] = useState(false);\r\n\r\n  // Função de Login\r\n  const Login = async () => {\r\n    try {\r\n      // Verifica se o usuário está logado no Firebase\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        const idToken = await currentUser.getIdToken(true);  // Obtém o token do usuário\r\n        const response = await axios.post('http://localhost:8080/login', { idToken });\r\n\r\n        const userInfo = response.data; // Obtém as informações do usuário do back-end\r\n        console.log('Informações do usuário:', userInfo);\r\n        \r\n        setUsuario(userInfo); // Armazena as informações do usuário\r\n        setQuestionarioCompleto(userInfo.questionarioCompleto); // Atualiza o estado sobre o questionário\r\n      } else {\r\n        console.error('Usuário não está logado');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao fazer login:', error);\r\n    }\r\n  };\r\n\r\n  // Função de Logout\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('http://localhost:8080/logout'); // Envia requisição de logout ao back-end\r\n      setUsuario(null); // Limpa as informações do usuário\r\n      setQuestionarioCompleto(false); // Reseta o estado do questionário\r\n      await auth.signOut(); // Realiza o logout no Firebase\r\n    } catch (error) {\r\n      console.error('Erro ao fazer logout:', error);\r\n    }\r\n  };\r\n\r\n  // Função para completar o questionário\r\n  const preencherQuestionario = async () => {\r\n    if (usuario) {\r\n      try {\r\n        await axios.post('http://localhost:8080/completar-questionario', { uid: usuario.uid });\r\n        setQuestionarioCompleto(true); // Marca o questionário como completo no front-end\r\n      } catch (error) {\r\n        console.error('Erro ao marcar questionário como completo:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Informações do Usuário</h1>\r\n      {usuario ? (\r\n        <div>\r\n          <h2>Bem-vindo, {usuario.displayName}</h2>\r\n          {usuario.photoURL && <img src={usuario.photoURL} alt=\"Foto do usuário\" />}\r\n          <p>Email: {usuario.email}</p>\r\n          <p>UID: {usuario.uid}</p>\r\n          <button onClick={logout}>Logout</button>\r\n\r\n          {questionarioCompleto ? (\r\n            <p>Questionário completo!</p>\r\n          ) : (\r\n            <button onClick={preencherQuestionario}>Completar Questionário</button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <button onClick={Login}>Login com Google</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}