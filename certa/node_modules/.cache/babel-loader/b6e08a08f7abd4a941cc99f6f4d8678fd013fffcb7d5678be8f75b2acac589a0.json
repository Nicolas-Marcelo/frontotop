{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\certa\\\\front\\\\certa\\\\src\\\\Login\\\\Questionario.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questionario({\n  uid,\n  onQuestionarioEnviado\n}) {\n  _s();\n  const [nomeCompleto, setNomeCompleto] = useState('');\n  const [CPF, setCPF] = useState('');\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [tipoConta, setTipoConta] = useState('');\n  const [experiencias, setExperiencias] = useState('');\n  const [listaExperiencias, setListaExperiencias] = useState([]);\n  const [conhecimentos, setConhecimentos] = useState('');\n  const [listaConhecimentos, setListaConhecimentos] = useState([]);\n  const adicionarExperiencia = () => {\n    if (experiencias.trim() !== '') {\n      setListaExperiencias([...listaExperiencias, experiencias]);\n      setExperiencias('');\n    }\n  };\n  const adicionarConhecimento = () => {\n    if (conhecimentos.trim() !== '') {\n      setListaConhecimentos([...listaConhecimentos, conhecimentos]);\n      setConhecimentos('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8080/enviar-questionario', {\n        userId: uid,\n        email: '',\n        // opcional, pode ser preenchido se você quiser enviar\n        displayName: '',\n        // opcional\n        nomeCompletoUsuario: nomeCompleto,\n        CPFUsuario: CPF,\n        dataNascimentoUsuario: dataNascimento,\n        tipoConta,\n        experiencias: listaExperiencias,\n        listaConhecimentos: conhecimentos.split(',').map(conhe => conhe.trim())\n      });\n      alert('Questionário enviado com sucesso!');\n      onQuestionarioEnviado();\n    } catch (error) {\n      console.error('Erro ao enviar questionário:', error);\n      alert('Erro ao enviar questionário.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome Completo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nomeCompleto,\n        onChange: e => setNomeCompleto(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CPF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: CPF,\n        onChange: e => setCPF(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Data de Nascimento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dataNascimento,\n        onChange: e => setDataNascimento(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tipo de Conta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tipoConta,\n        onChange: e => setTipoConta(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Experi\\xEAncias (separadas por v\\xEDrgula):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: experiencias,\n        onChange: e => setExperiencias(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adicionarConhecimento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listaExperiencias.map((experiencia, index) => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: experiencia\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Conhecimentos (separados por v\\xEDrgula):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: conhecimentos,\n        onChange: e => setConhecimentos(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar Question\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Questionario, \"T+p3SZPTJpKiwMXZNSryGdA1Ang=\");\n_c = Questionario;\nexport default Questionario;\nvar _c;\n$RefreshReg$(_c, \"Questionario\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Questionario","uid","onQuestionarioEnviado","_s","nomeCompleto","setNomeCompleto","CPF","setCPF","dataNascimento","setDataNascimento","tipoConta","setTipoConta","experiencias","setExperiencias","listaExperiencias","setListaExperiencias","conhecimentos","setConhecimentos","listaConhecimentos","setListaConhecimentos","adicionarExperiencia","trim","adicionarConhecimento","handleSubmit","e","preventDefault","post","userId","email","displayName","nomeCompletoUsuario","CPFUsuario","dataNascimentoUsuario","split","map","conhe","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","experiencia","index","_c","$RefreshReg$"],"sources":["C:/Users/nicol/OneDrive/Área de Trabalho/certa/front/certa/src/Login/Questionario.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Questionario({ uid, onQuestionarioEnviado }) {\r\n  const [nomeCompleto, setNomeCompleto] = useState('');\r\n  const [CPF, setCPF] = useState('');\r\n  const [dataNascimento, setDataNascimento] = useState('');\r\n  const [tipoConta, setTipoConta] = useState('');\r\n  const [experiencias, setExperiencias] = useState('');\r\n  const [listaExperiencias, setListaExperiencias] = useState([]);\r\n  const [conhecimentos, setConhecimentos] = useState('');\r\n  const [listaConhecimentos, setListaConhecimentos] = useState([]);\r\n\r\n  const adicionarExperiencia = () => {\r\n    if (experiencias.trim() !== '') {\r\n      setListaExperiencias([... listaExperiencias, experiencias])\r\n      setExperiencias('');\r\n    }\r\n  }\r\n\r\n  const adicionarConhecimento = () => {\r\n    if (conhecimentos.trim() !== '') {\r\n      setListaConhecimentos([...listaConhecimentos, conhecimentos]);\r\n      setConhecimentos('');\r\n    }\r\n  } \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post('http://localhost:8080/enviar-questionario', {\r\n        userId: uid,\r\n        email: '', // opcional, pode ser preenchido se você quiser enviar\r\n        displayName: '', // opcional\r\n        nomeCompletoUsuario: nomeCompleto,\r\n        CPFUsuario: CPF,\r\n        dataNascimentoUsuario: dataNascimento,\r\n        tipoConta,\r\n        experiencias: listaExperiencias,\r\n        listaConhecimentos: conhecimentos.split(',').map((conhe) => conhe.trim()),\r\n      });\r\n\r\n      alert('Questionário enviado com sucesso!');\r\n      onQuestionarioEnviado();\r\n    } catch (error) {\r\n      console.error('Erro ao enviar questionário:', error);\r\n      alert('Erro ao enviar questionário.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Nome Completo:</label>\r\n        <input type=\"text\" value={nomeCompleto} onChange={(e) => setNomeCompleto(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>CPF:</label>\r\n        <input type=\"text\" value={CPF} onChange={(e) => setCPF(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Data de Nascimento:</label>\r\n        <input type=\"date\" value={dataNascimento} onChange={(e) => setDataNascimento(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Tipo de Conta:</label>\r\n        <input type=\"text\" value={tipoConta} onChange={(e) => setTipoConta(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Experiências (separadas por vírgula):</label>\r\n        <input \r\n          type=\"text\" \r\n          value={experiencias} \r\n          onChange={(e) => setExperiencias(e.target.value)} required />\r\n          <button onClick={adicionarConhecimento}></button>\r\n      </div>\r\n      <ul>\r\n        {listaExperiencias.map((experiencia, index) => {\r\n          <li key={index}>{experiencia}</li>\r\n        })}\r\n      </ul>\r\n      <div>\r\n        <label>Conhecimentos (separados por vírgula):</label>\r\n        <input type=\"text\" value={conhecimentos} onChange={(e) => setConhecimentos(e.target.value)} required />\r\n      </div>\r\n      <button type=\"submit\">Enviar Questionário</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Questionario;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}